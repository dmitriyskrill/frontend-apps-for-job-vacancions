[
  {
    "type": "p",
    "text": "Требуется разработать одностраничное приложение (SPA), эмулирующее работу лифтовой системы."
  },
  {
    "type": "p",
    "text": "Приложение должно состоять из схемы нескольких этажей с нумерацией и кнопками вызова, а также из самой шахты лифта с кабиной."
  },
  {
    "type": "p",
    "text": "Количество этажей по умолчанию: 5"
  },
  {
    "type": "p",
    "text": "Количество шахт лифта по умолчанию: 1"
  },
  {
    "type": "p",
    "text": "По умолчанию лифт находится на 1 этаже в состоянии покоя (свободен)."
  },
  {
    "type": "list",
    "header": "При нажатии на кнопку вызова лифт должен обработать этот вызов в соответствии со следующими сценариями:",
    "listItems": [
      "Если вызов осуществляется с этажа, на котором лифта нет – свободный лифт начинает движение к выбранному этажу со скоростью 1 этаж в секунду.\nДостигнув нужного этажа лифт 3 секунды «отдыхает» - индикацию этого состояния можно реализовать с помощью мигания.\nПосле этого лифт снова переходит в состояние покоя и готов обработать\nследующий вызов.",
      "Если в момент движения лифта осуществить вызов на другой этаж – этот вызов должен добавиться в очередь вызовов.\nВызовы должны обрабатываться последовательно.",
      "Вызов пропускается в случаях, если:\n- лифт уже находится на выбранном этаже в состоянии покоя\n- лифт уже находится в процессе обработки такого вызова (находится в движении к выбранному этажу)\n- в очереди вызовов уже есть выбранный этаж"
    ]
  },
  {
    "type": "list",
    "header": "Также необходимо реализовать дополнительную обвязку, состоящую из следующих задач:",
    "listItems": [
      "Добавить табло индикации на кабину лифта, на котором в процессе движения будет отображаться направление движения и целевой этаж.",
      "Добавить индикацию кнопок вызова на этажах (например, смену цвета) в случае, если:\n- лифт уже находится в процессе обработки такого вызова (находится в\nдвижении к выбранному этажу)\n- в очереди вызовов уже есть выбранный этаж",
      "Добавить сохранение состояния приложения (позиция лифта, очередь вызовов и т.д.) при перезагрузке страницы – после перезагрузки приложение должно возобновить работу с сохраненного состояния."
    ]
  },
  {
    "type": "list",
    "header": "Расширенное задание:",
    "listItems": [
      "Спроектировать приложение таким образом, чтобы его было легко масштабировать (изменить количество этажей и лифтов).\nПредполагается наличие конфигурационных параметров, настраиваемых в одном месте (например, в отдельном файле или в корневом компоненте).",
      "При наличии двух и более свободных лифтов вызов должен обработать лифт, наиболее близко расположенный к целевому этажу."
    ]
  },
  {
    "type": "p",
    "text": "Приложение должно быть написано с использованием фреймворка VueJS (2 или 3 версии). Приветствуется Webpack сборка со своим конфигом, но допускается использование vue-cli или create-vue."
  },
  {
    "type": "p",
    "text": "Приложение не должно иметь глобальных зависимостей (все зависимости должны устанавливаться локально в папку с проектом)."
  },
  {
    "type": "p",
    "text": "Установка должна происходить по команде: npm install"
  },
  {
    "type": "p",
    "text": "Запуск должен происходить по команде: npm run start"
  },
  {
    "type": "p",
    "text": "Дизайн (стилистическое оформление) приложения остается на усмотрение разработчика."
  },
  {
    "type": "p",
    "text": "Выполненное задание нужно загрузить в публичный репозиторий на Github."
  },
  {
    "type": "list",
    "header": "Работа оценивается по следующим критериям:",
    "listItems": [
      "Соответствие реализации техническому заданию.",
      "Компонентный подход (структура приложения).",
      "Ведение git репозитория. Подсказка: лучше разбивать реализацию поэтапно на логические коммиты, а не заливать все сразу.",
      "Правильность, чистота и стиль кода, отсутствие ошибок и предупреждений при сборке и работе приложения."
    ]
  }
]